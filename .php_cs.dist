<?php

$header = <<<EOF
This file is part of the RollerworksSearch package.

(c) Sebastiaan Stok <s.stok@rollerscapes.net>

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.
EOF;

return PhpCsFixer\Config::create()
    ->setRiskyAllowed(true)
    ->setRules([
        '@PhpCsFixer' => true,
        '@PhpCsFixer:risky' => true,
        '@Symfony' => true,
        '@Symfony:risky' => true,
        '@PHP56Migration' => true,
        '@PHP70Migration:risky' => true,
        '@PHP71Migration:risky' => true,
        //'@PHP73Migration' => true,
        '@PHPUnit60Migration:risky' => true,
        '@PHPUnit75Migration:risky' => true,
        '@DoctrineAnnotation' => true,
        'array_syntax' => ['syntax' => 'short'],
        'blank_line_before_statement' => [
            'statements' => [
                'break',
                'case',
                'continue',
                'declare',
                'default',
                'die',
                'do',
                'exit',
                'for',
                'foreach',
                'goto',
                'if',
                'include',
                'include_once',
                'require',
                'require_once',
                'return',
                'switch',
                'throw',
                'try',
                'while',
                'yield',
            ],
        ],
        'braces' => [
            'allow_single_line_closure' => true,
        ],
        'concat_space' => [
            'spacing' => 'one',
        ],
        'comment_to_phpdoc' => [
            'ignored_tags' => ['codeCoverageIgnoreStart', 'codeCoverageIgnoreEnd'],
        ],
        'doctrine_annotation_array_assignment' => [
            'operator' => '=',
        ],
        'final_static_access' => true,
        'general_phpdoc_annotation_remove' => [
            //'author',
            'since',
        ],
        'header_comment' => ['header' => $header],
        'list_syntax' => [
            'syntax' => 'short',
        ],
        'mb_str_functions' => false, // Breaks the String lexer which needs to be aware of actual bytes
        'method_chaining_indentation' => false,
        'multiline_whitespace_before_semicolons' => ['strategy' => 'no_multi_line'],
        'native_function_invocation' => [
            'strict' => true,
        ],
        'no_extra_blank_lines' => [
            'tokens' => ['extra', 'useTrait'],
        ],
        'no_superfluous_phpdoc_tags' => true,
        'not_operator_with_successor_space' => true,
        'ordered_class_elements' => false, // Use the step-down structure approach
        'ordered_imports' => [
            'imports_order' => ['class', 'const', 'function'],
        ],
        'php_unit_method_casing' => ['case' => 'snake_case'],
        'php_unit_strict' => false,
        'php_unit_test_annotation' => [
            'style' => 'annotation',
        ],
        'php_unit_test_class_requires_covers' => false,
        'phpdoc_to_comment' => false, // This breaks for variable @var blocks
        'phpdoc_types_order' => [
            'null_adjustment' => 'always_last',
        ],
        'phpdoc_var_without_name' => false, // see phpdoc_to_comment
        'strict_comparison' => false,
        'single_line_throw' => false,
        'static_lambda' => false, // Breaks Prophecy promises
        'yoda_style' => [
            'equal' => false,
            'identical' => false,
        ],
    ])
    ->setRiskyAllowed(true)
    ->setFinder(
        PhpCsFixer\Finder::create()
            ->exclude('Fixtures')
            ->in([__DIR__.'/lib'])
    )
;
